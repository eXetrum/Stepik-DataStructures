<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>BTrees</title>
<link rel="stylesheet" type="text/css" media="all" charset="utf-8" href="BTrees_files/common.css">
<link rel="stylesheet" type="text/css" media="screen" charset="utf-8" href="BTrees_files/screen.css">
<link rel="stylesheet" type="text/css" media="print" charset="utf-8" href="BTrees_files/print.css">
<style type="text/css">
ul.pagetitle{
  display: inline;
  margin: 0;
  padding: 0;
  font-size: 1.5em;
}
li.pagetitle{
  display: inline;
  margin: 0;
}
td.noborder {
  border: 0;
}
</style>
</head>
<body>
<table>
<tbody><tr>
<td class="noborder">
<img src="BTrees_files/logo.png">
</td>
<td class="noborder">
<ul class="pagetitle">
<li class="pagetitle"><a class="backlink">BTrees</a>
</li></ul>
<br><br>
[<a href="https://www.cs.yale.edu/homes/aspnes/pinewiki/FrontPage.html">FrontPage</a>]&nbsp;[<a href="https://www.cs.yale.edu/homes/aspnes/pinewiki/TitleIndex.html">TitleIndex</a>]&nbsp;[<a href="https://www.cs.yale.edu/homes/aspnes/pinewiki/WordIndex.html">WordIndex</a>]&nbsp;
</td>
</tr>
</tbody></table>
<hr>
<div id="page"><p><b>Note:</b> You are looking at a static copy of the former PineWiki site, used for class notes by <a href="http://www.cs.yale.edu/homes/aspnes/">James Aspnes</a>
 from 2003 to 2012. Many mathematical formulas are broken, and there are
 likely to be other bugs as well. These will most likely not be fixed.  
You may be able to find more up-to-date versions of some of these notes 
at <a href="http://www.cs.yale.edu/homes/aspnes/#classes">http://www.cs.yale.edu/homes/aspnes/#classes</a>.</p>
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><p class="line867"><strong>B-trees</strong> are a data structure designed to take advantage of the block structure of memory devices, particularly disks. <span class="anchor" id="line-2"></span><span class="anchor" id="line-3"></span></p><p class="line867">
</p><h1 id="The_memory_hierarchy">1. The memory hierarchy</h1>
<span class="anchor" id="line-4"></span><span class="anchor" id="line-5"></span><p class="line874">Most
 of the time, programmers will assume that memory is flat, meaning that 
all memory references are equally expensive.  While hardware designers 
work very hard to make memory references cheap, they are not all equally
 cheap. <span class="anchor" id="line-6"></span><span class="anchor" id="line-7"></span></p><p class="line874">Typical
 CPUs implement several layers of caching backed by system memory and 
then virtual memory.  The cache layers are very fast memory (typically 
on the same die as the CPU); system memory is slower; virtual memory is 
slower by 6 orders of magnitude.  Typically data is moved to the fastest
 available level of the cache when it is accessed; data that hasn't been
 accessed in a while is pushed out to slower levels to make room.  To 
amortize the overhead costs of this process, data is managed in blocks, 
which may range from as little as 64 bytes for the on-chip caches to as 
much as 4096 bytes or more for the virtual memory system. <span class="anchor" id="line-8"></span><span class="anchor" id="line-9"></span></p><p class="line862">The effect of storing data in caches is that it's cheaper—sometimes <em>much</em> cheaper—to access data at an address close to other addresses you've looked at recently than to access data far away. <span class="anchor" id="line-10"></span><span class="anchor" id="line-11"></span></p><p class="line867">
</p><h1 id="Caching_and_data_structures">2. Caching and data structures</h1>
<span class="anchor" id="line-12"></span><span class="anchor" id="line-13"></span><p class="line862">The structure of the cache system means that, all else being equal, a data structure will run faster if it has good <strong>locality</strong>,
 which means that pieces of the data structure accessed around the same 
time tend to be in about the same place.  For example, given the choice 
between searching through an unsorted array and an unsorted linked list,
 you are better off searching the array: each position you look at in 
the array comes right after the previous position, so is likely to be 
stored in the same block.  In contrast, the elements of the linked list 
will be wherever <tt class="backtick">malloc</tt> managed to scrounge up
 space: in the worst case, one element per virtual memory block, each of
 which needs to be paged in from disk if you are running low on space.  
The disadvantage of the array over the linked list is that calling <tt class="backtick">realloc</tt>
 may be expensive; one way to avoid this is to build a linked list of 
large nodes each of which holds an array, as done in this sample code: <a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/stackBlockList.c" title="">stackBlockList.c</a>.  This is actually slightly slower than just building a stack as an array (<a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/stackArray.c" title="">stackArray.c</a>) but much faster than the simple linked-list approach (<a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/stackList.c" title="">stackList.c</a>). <span class="anchor" id="line-14"></span><span class="anchor" id="line-15"></span></p><p class="line874">A
 similar issue arises with binary search trees.  Because we are only 
jumping through O(log n) nodes, the added cost of bad locality is not as
 noticeable as with linked lists, but we'd like to reduce it, especially
 if we expect our tree nodes to be stored on a slow device like a disk. <span class="anchor" id="line-16"></span><span class="anchor" id="line-17"></span></p><p class="line867">
</p><h1 id="B-trees">3. B-trees</h1>
<span class="anchor" id="line-18"></span><span class="anchor" id="line-19"></span><p class="line862">B-trees
 solve this problem by grouping what would be many nodes together into a
 single giant node.  The idea is that each node contains an array k keys
 and pointers to k+1 children, for a value of k that lies somewhere 
between m/2 and m (except for the root) where m is a parameter of the 
tree called the <strong>order</strong>.  Searching a B-tree consists of 
finding the child in between the two keys that our target lies between. 
 A picture of one node in a B-tree: <span class="anchor" id="line-20"></span><span class="anchor" id="line-21"></span></p><p class="line867"><span class="anchor" id="line-22"></span><span class="anchor" id="line-23"></span><span class="anchor" id="line-24"></span></p><pre><span class="anchor" id="line-1"></span> 14 38 57
<span class="anchor" id="line-2"></span>A  B  C  D</pre><span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span><p class="line862">Here there are three keys and four children <tt class="backtick">A</tt>, <tt class="backtick">B</tt>, <tt class="backtick">C</tt>, and <tt class="backtick">D</tt>.  Node <tt class="backtick">A</tt> is the root of a B-tree holding all keys less than 14, <tt class="backtick">B</tt> the root of a B-tree holding all keys strictly between 14 and 38, etc. <span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span></p><p class="line874">At
 the bottom of the tree are leaf nodes that don't hold any pointers.  A 
sophisticated implementation of a B-tree may take advantage of this to 
pack more keys into the leaves while still keeping the size of each node
 fitting neatly inside the block size (the implementation given below is
 not that sophisticated).  At the top is a root node, which is just like
 any other internal node except that it may contain fewer than m/2 keys.
 <span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span></p><p class="line867">
</p><h2 id="Insertions">3.1. Insertions</h2>
<span class="anchor" id="line-31"></span><span class="anchor" id="line-32"></span><p class="line874">To
 insert a key, we start by inserting it at the leaf, by moving any 
larger keys up to make room and then writing it into the sorted array.  
If the leaf becomes full, this may require some rebalancing. <span class="anchor" id="line-33"></span><span class="anchor" id="line-34"></span></p><p class="line874">B-trees
 are always completely balanced, with each leaf the same distance from 
the root.  The mechanism for balancing a B-tree is that when a node 
becomes full, it splits into two nodes and pushes a key up into its 
parent.  For example, we might split a three-key node into two one-key 
nodes like this: <span class="anchor" id="line-35"></span><span class="anchor" id="line-36"></span></p><p class="line867"><span class="anchor" id="line-37"></span><span class="anchor" id="line-38"></span><span class="anchor" id="line-39"></span><span class="anchor" id="line-40"></span><span class="anchor" id="line-41"></span><span class="anchor" id="line-42"></span><span class="anchor" id="line-43"></span></p><pre><span class="anchor" id="line-1-1"></span> 14 38 57
<span class="anchor" id="line-2-1"></span>A  B  C  D
<span class="anchor" id="line-3"></span>    
<span class="anchor" id="line-4"></span>    (38)
<span class="anchor" id="line-5"></span> 14      57
<span class="anchor" id="line-6"></span>A  B    C  D</pre><span class="anchor" id="line-44"></span><span class="anchor" id="line-45"></span><p class="line874">Pushing
 the key up into the parent will increase the number of keys in the 
parent and may force the parent to split as well.  If we find ourselves 
splitting the root, we create a new root with one key and two children. 
 This is the only way the height of the tree can increase. <span class="anchor" id="line-46"></span><span class="anchor" id="line-47"></span></p><p class="line867">
</p><h2 id="Deletions">3.2. Deletions</h2>
<span class="anchor" id="line-48"></span><span class="anchor" id="line-49"></span><p class="line862">Deletion
 is mostly just the reverse of insertion, but has a lot of messy special
 cases.  As in a binary search tree, it's complicated to delete a key 
from an internal node; the solution is to delete a key from a nearby 
leaf instead.  We do not implement deletion in the code below, but you 
can read about it in <a href="https://www.cs.yale.edu/homes/aspnes/pinewiki/HorowitzEtAl.html">HorowitzEtAl</a> §11.2.4. <span class="anchor" id="line-50"></span><span class="anchor" id="line-51"></span></p><p class="line867">
</p><h1 id="Implementation">4. Implementation</h1>
<span class="anchor" id="line-52"></span><span class="anchor" id="line-53"></span><p class="line862">Here is a basic implementation, not-very-tuned implementation of a B-tree.  Despite the horrendous amount of copying in <tt class="backtick">btInsert</tt>, the test program runs about four times faster with this implementation than an adapted version runs on the AVL tree code from <a href="https://www.cs.yale.edu/homes/aspnes/pinewiki/C(2f)AvlTree.html">C/AvlTree</a>.
  There are many possible reasons for this (the AVL tree code is not 
very optimized), but cache performance and avoiding malloc overhead are 
probably the big factors. <span class="anchor" id="line-54"></span><span class="anchor" id="line-55"></span></p><p class="line867"><span class="anchor" id="line-1-1"></span></p><div class="highlight text"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
function isnumbered(obj) {
  return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
  var nlen = Math.max(0,chrs-(''+num).length), res = '';
  while (nlen>0) { res += ' '; nlen-- }
  return res+num+add;
}
function addnumber(did, nstart, nstep) {
  var c = document.getElementById(did), l = c.firstChild, n = 1;
  if (!isnumbered(c)) {
    if (typeof nstart == 'undefined') nstart = 1;
    if (typeof nstep  == 'undefined') nstep = 1;
    var n = nstart;
    while (l != null) {
      if (l.tagName == 'SPAN') {
        var s = document.createElement('SPAN');
        var a = document.createElement('A');
        s.className = 'LineNumber';
        a.appendChild(document.createTextNode(nformat(n,4,'')));
        a.href = '#' + did + '_' + n;
        s.appendChild(a);
        s.appendChild(document.createTextNode(' '));
        n += nstep;
        if (l.childNodes.length) {
          l.insertBefore(s, l.firstChild);
        }
        else {
          l.appendChild(s);
        }
      }
      l = l.nextSibling;
    }
  }
  return false;
}
function remnumber(did) {
  var c = document.getElementById(did), l = c.firstChild;
  if (isnumbered(c)) {
    while (l != null) {
      if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
      l = l.nextSibling;
    }
  }
  return false;
}
function togglenumber(did, nstart, nstep) {
  var c = document.getElementById(did);
  if (isnumbered(c)) {
    remnumber(did);
  } else {
    addnumber(did,nstart,nstep);
  }
  return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_1">   1</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_1"></span><span class="anchor" id="line-1-2"></span><span class="Comment">/* implementation of a B-tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_2">   2</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_2"></span><span class="anchor" id="line-2-1"></span><span class="ResWord">typedef</span> <span class="ResWord">struct</span> <span class="ID">btNode</span> *<span class="ID">bTree</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_3">   3</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_3"></span><span class="anchor" id="line-3-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_4">   4</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_4"></span><span class="anchor" id="line-4-1"></span><span class="Comment">/* create a new empty tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_5">   5</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_5"></span><span class="anchor" id="line-5-1"></span><span class="ID">bTree</span> <span class="ID">btCreate</span>(<span class="ResWord">void</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_6">   6</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_6"></span><span class="anchor" id="line-6-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_7">   7</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_7"></span><span class="anchor" id="line-7-1"></span><span class="Comment">/* free a tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_8">   8</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_8"></span><span class="anchor" id="line-8-1"></span><span class="ResWord">void</span> <span class="ID">btDestroy</span>(<span class="ID">bTree</span> <span class="ID">t</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_9">   9</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_9"></span><span class="anchor" id="line-9-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_10">  10</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_10"></span><span class="anchor" id="line-10-1"></span><span class="Comment">/* return nonzero if key is present in tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_11">  11</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_11"></span><span class="anchor" id="line-11-1"></span><span class="ResWord">int</span> <span class="ID">btSearch</span>(<span class="ID">bTree</span> <span class="ID">t</span>, <span class="ResWord">int</span> <span class="ID">key</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_12">  12</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_12"></span><span class="anchor" id="line-12-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_13">  13</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_13"></span><span class="anchor" id="line-13-1"></span><span class="Comment">/* insert a new element into a tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_14">  14</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_14"></span><span class="anchor" id="line-14-1"></span><span class="ResWord">void</span> <span class="ID">btInsert</span>(<span class="ID">bTree</span> <span class="ID">t</span>, <span class="ResWord">int</span> <span class="ID">key</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_15">  15</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_15"></span><span class="anchor" id="line-15-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_16">  16</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_16"></span><span class="anchor" id="line-16-1"></span><span class="Comment">/* print all keys of the tree in order */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_17">  17</a> </span><span class="LineAnchor" id="CA-fc5a8bdb05402f5503a64c08204a9c408dd3615b_17"></span><span class="anchor" id="line-17-1"></span><span class="ResWord">void</span> <span class="ID">btPrintKeys</span>(<span class="ID">bTree</span> <span class="ID">t</span>);</span>
</pre></div></div><a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/bTree.h" title="attachment:bTree.h">bTree.h</a> <span class="anchor" id="line-56"></span><span class="anchor" id="line-57"></span><p class="line867"><span class="anchor" id="line-1-3"></span></p><div class="highlight text"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_1">   1</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_1"></span><span class="anchor" id="line-1-4"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_2">   2</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_2"></span><span class="anchor" id="line-2-2"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdlib.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_3">   3</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_3"></span><span class="anchor" id="line-3-2"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;assert.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_4">   4</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_4"></span><span class="anchor" id="line-4-2"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;string.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_5">   5</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_5"></span><span class="anchor" id="line-5-2"></span><span class="Preprc"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_6">   6</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_6"></span><span class="anchor" id="line-6-2"></span><span class="Preprc">#</span><span class="Preprc">include "bTree.h"</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_7">   7</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_7"></span><span class="anchor" id="line-7-2"></span><span class="Preprc"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_8">   8</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_8"></span><span class="anchor" id="line-8-2"></span><span class="Preprc">#</span><span class="Preprc">define MAX_KEYS (1024)</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_9">   9</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_9"></span><span class="anchor" id="line-9-2"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_10">  10</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_10"></span><span class="anchor" id="line-10-2"></span><span class="ResWord">struct</span> <span class="ID">btNode</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_11">  11</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_11"></span><span class="anchor" id="line-11-2"></span>    <span class="ResWord">int</span> <span class="ID">isLeaf</span>;     <span class="Comment">/* is this a leaf node? */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_12">  12</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_12"></span><span class="anchor" id="line-12-2"></span>    <span class="ResWord">int</span> <span class="ID">numKeys</span>;    <span class="Comment">/* how many keys does this node contain? */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_13">  13</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_13"></span><span class="anchor" id="line-13-2"></span>    <span class="ResWord">int</span> <span class="ID">keys</span>[<span class="ID">MAX_KEYS</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_14">  14</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_14"></span><span class="anchor" id="line-14-2"></span>    <span class="ResWord">struct</span> <span class="ID">btNode</span> *<span class="ID">kids</span>[<span class="ID">MAX_KEYS</span>+<span class="Number">1</span>];  <span class="Comment">/* kids[i] holds nodes &lt; keys[i] */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_15">  15</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_15"></span><span class="anchor" id="line-15-2"></span>};</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_16">  16</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_16"></span><span class="anchor" id="line-16-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_17">  17</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_17"></span><span class="anchor" id="line-17-2"></span><span class="ID">bTree</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_18">  18</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_18"></span><span class="anchor" id="line-18-1"></span><span class="ID">btCreate</span>(<span class="ResWord">void</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_19">  19</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_19"></span><span class="anchor" id="line-19-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_20">  20</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_20"></span><span class="anchor" id="line-20-1"></span>    <span class="ID">bTree</span> <span class="ID">b</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_21">  21</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_21"></span><span class="anchor" id="line-21-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_22">  22</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_22"></span><span class="anchor" id="line-22-1"></span>    <span class="ID">b</span> = <span class="ID">malloc</span>(<span class="ResWord">sizeof</span>(*<span class="ID">b</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_23">  23</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_23"></span><span class="anchor" id="line-23-1"></span>    <span class="ID">assert</span>(<span class="ID">b</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_24">  24</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_24"></span><span class="anchor" id="line-24-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_25">  25</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_25"></span><span class="anchor" id="line-25-1"></span>    <span class="ID">b</span>-&gt;<span class="ID">isLeaf</span> = <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_26">  26</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_26"></span><span class="anchor" id="line-26-1"></span>    <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> = <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_27">  27</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_27"></span><span class="anchor" id="line-27-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_28">  28</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_28"></span><span class="anchor" id="line-28-1"></span>    <span class="ResWord">return</span> <span class="ID">b</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_29">  29</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_29"></span><span class="anchor" id="line-29-1"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_30">  30</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_30"></span><span class="anchor" id="line-30-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_31">  31</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_31"></span><span class="anchor" id="line-31-1"></span><span class="ResWord">void</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_32">  32</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_32"></span><span class="anchor" id="line-32-1"></span><span class="ID">btDestroy</span>(<span class="ID">bTree</span> <span class="ID">b</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_33">  33</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_33"></span><span class="anchor" id="line-33-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_34">  34</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_34"></span><span class="anchor" id="line-34-1"></span>    <span class="ResWord">int</span> <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_35">  35</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_35"></span><span class="anchor" id="line-35-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_36">  36</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_36"></span><span class="anchor" id="line-36-1"></span>    <span class="ResWord">if</span>(!<span class="ID">b</span>-&gt;<span class="ID">isLeaf</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_37">  37</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_37"></span><span class="anchor" id="line-37-1"></span>        <span class="ResWord">for</span>(<span class="ID">i</span> = <span class="Number">0</span>; <span class="ID">i</span> &lt; <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> + <span class="Number">1</span>; <span class="ID">i</span>++) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_38">  38</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_38"></span><span class="anchor" id="line-38-1"></span>            <span class="ID">btDestroy</span>(<span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">i</span>]);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_39">  39</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_39"></span><span class="anchor" id="line-39-1"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_40">  40</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_40"></span><span class="anchor" id="line-40-1"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_41">  41</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_41"></span><span class="anchor" id="line-41-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_42">  42</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_42"></span><span class="anchor" id="line-42-1"></span>    <span class="ID">free</span>(<span class="ID">b</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_43">  43</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_43"></span><span class="anchor" id="line-43-1"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_44">  44</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_44"></span><span class="anchor" id="line-44-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_45">  45</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_45"></span><span class="anchor" id="line-45-1"></span><span class="Comment">/* return smallest index i in sorted array such that key &lt;= a[i] */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_46">  46</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_46"></span><span class="anchor" id="line-46-1"></span><span class="Comment">/* (or n if there is no such index) */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_47">  47</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_47"></span><span class="anchor" id="line-47-1"></span><span class="ResWord">static</span> <span class="ResWord">int</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_48">  48</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_48"></span><span class="anchor" id="line-48-1"></span><span class="ID">searchKey</span>(<span class="ResWord">int</span> <span class="ID">n</span>, <span class="ResWord">const</span> <span class="ResWord">int</span> *<span class="ID">a</span>, <span class="ResWord">int</span> <span class="ID">key</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_49">  49</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_49"></span><span class="anchor" id="line-49-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_50">  50</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_50"></span><span class="anchor" id="line-50-1"></span>    <span class="ResWord">int</span> <span class="ID">lo</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_51">  51</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_51"></span><span class="anchor" id="line-51-1"></span>    <span class="ResWord">int</span> <span class="ID">hi</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_52">  52</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_52"></span><span class="anchor" id="line-52-1"></span>    <span class="ResWord">int</span> <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_53">  53</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_53"></span><span class="anchor" id="line-53-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_54">  54</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_54"></span><span class="anchor" id="line-54-1"></span>    <span class="Comment">/* invariant: a[lo] &lt; key &lt;= a[hi] */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_55">  55</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_55"></span><span class="anchor" id="line-55-1"></span>    <span class="ID">lo</span> = -<span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_56">  56</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_56"></span><span class="anchor" id="line-56-1"></span>    <span class="ID">hi</span> = <span class="ID">n</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_57">  57</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_57"></span><span class="anchor" id="line-57-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_58">  58</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_58"></span><span class="anchor" id="line-58"></span>    <span class="ResWord">while</span>(<span class="ID">lo</span> + <span class="Number">1</span> &lt; <span class="ID">hi</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_59">  59</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_59"></span><span class="anchor" id="line-59"></span>        <span class="ID">mid</span> = (<span class="ID">lo</span>+<span class="ID">hi</span>)/<span class="Number">2</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_60">  60</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_60"></span><span class="anchor" id="line-60"></span>        <span class="ResWord">if</span>(<span class="ID">a</span>[<span class="ID">mid</span>] == <span class="ID">key</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_61">  61</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_61"></span><span class="anchor" id="line-61"></span>            <span class="ResWord">return</span> <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_62">  62</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_62"></span><span class="anchor" id="line-62"></span>        } <span class="ResWord">else</span> <span class="ResWord">if</span>(<span class="ID">a</span>[<span class="ID">mid</span>] &lt; <span class="ID">key</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_63">  63</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_63"></span><span class="anchor" id="line-63"></span>            <span class="ID">lo</span> = <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_64">  64</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_64"></span><span class="anchor" id="line-64"></span>        } <span class="ResWord">else</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_65">  65</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_65"></span><span class="anchor" id="line-65"></span>            <span class="ID">hi</span> = <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_66">  66</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_66"></span><span class="anchor" id="line-66"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_67">  67</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_67"></span><span class="anchor" id="line-67"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_68">  68</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_68"></span><span class="anchor" id="line-68"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_69">  69</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_69"></span><span class="anchor" id="line-69"></span>    <span class="ResWord">return</span> <span class="ID">hi</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_70">  70</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_70"></span><span class="anchor" id="line-70"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_71">  71</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_71"></span><span class="anchor" id="line-71"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_72">  72</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_72"></span><span class="anchor" id="line-72"></span><span class="ResWord">int</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_73">  73</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_73"></span><span class="anchor" id="line-73"></span><span class="ID">btSearch</span>(<span class="ID">bTree</span> <span class="ID">b</span>, <span class="ResWord">int</span> <span class="ID">key</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_74">  74</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_74"></span><span class="anchor" id="line-74"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_75">  75</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_75"></span><span class="anchor" id="line-75"></span>    <span class="ResWord">int</span> <span class="ID">pos</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_76">  76</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_76"></span><span class="anchor" id="line-76"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_77">  77</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_77"></span><span class="anchor" id="line-77"></span>    <span class="Comment">/* have to check for empty tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_78">  78</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_78"></span><span class="anchor" id="line-78"></span>    <span class="ResWord">if</span>(<span class="ID">b</span>-&gt;<span class="ID">numKeys</span> == <span class="Number">0</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_79">  79</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_79"></span><span class="anchor" id="line-79"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_80">  80</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_80"></span><span class="anchor" id="line-80"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_81">  81</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_81"></span><span class="anchor" id="line-81"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_82">  82</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_82"></span><span class="anchor" id="line-82"></span>    <span class="Comment">/* look for smallest position that key fits below */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_83">  83</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_83"></span><span class="anchor" id="line-83"></span>    <span class="ID">pos</span> = <span class="ID">searchKey</span>(<span class="ID">b</span>-&gt;<span class="ID">numKeys</span>, <span class="ID">b</span>-&gt;<span class="ID">keys</span>, <span class="ID">key</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_84">  84</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_84"></span><span class="anchor" id="line-84"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_85">  85</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_85"></span><span class="anchor" id="line-85"></span>    <span class="ResWord">if</span>(<span class="ID">pos</span> &lt; <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> &amp;&amp; <span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>] == <span class="ID">key</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_86">  86</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_86"></span><span class="anchor" id="line-86"></span>        <span class="ResWord">return</span> <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_87">  87</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_87"></span><span class="anchor" id="line-87"></span>    } <span class="ResWord">else</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_88">  88</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_88"></span><span class="anchor" id="line-88"></span>        <span class="ResWord">return</span>(!<span class="ID">b</span>-&gt;<span class="ID">isLeaf</span> &amp;&amp; <span class="ID">btSearch</span>(<span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">pos</span>], <span class="ID">key</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_89">  89</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_89"></span><span class="anchor" id="line-89"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_90">  90</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_90"></span><span class="anchor" id="line-90"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_91">  91</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_91"></span><span class="anchor" id="line-91"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_92">  92</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_92"></span><span class="anchor" id="line-92"></span><span class="Comment">/* insert a new key into a tree */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_93">  93</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_93"></span><span class="anchor" id="line-93"></span><span class="Comment">/* returns new right sibling if the node splits */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_94">  94</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_94"></span><span class="anchor" id="line-94"></span><span class="Comment">/* and puts the median in *median */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_95">  95</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_95"></span><span class="anchor" id="line-95"></span><span class="Comment">/* else returns 0 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_96">  96</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_96"></span><span class="anchor" id="line-96"></span><span class="ResWord">static</span> <span class="ID">bTree</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_97">  97</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_97"></span><span class="anchor" id="line-97"></span><span class="ID">btInsertInternal</span>(<span class="ID">bTree</span> <span class="ID">b</span>, <span class="ResWord">int</span> <span class="ID">key</span>, <span class="ResWord">int</span> *<span class="ID">median</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_98">  98</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_98"></span><span class="anchor" id="line-98"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_99">  99</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_99"></span><span class="anchor" id="line-99"></span>    <span class="ResWord">int</span> <span class="ID">pos</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_100"> 100</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_100"></span><span class="anchor" id="line-100"></span>    <span class="ResWord">int</span> <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_101"> 101</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_101"></span><span class="anchor" id="line-101"></span>    <span class="ID">bTree</span> <span class="ID">b2</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_102"> 102</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_102"></span><span class="anchor" id="line-102"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_103"> 103</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_103"></span><span class="anchor" id="line-103"></span>    <span class="ID">pos</span> = <span class="ID">searchKey</span>(<span class="ID">b</span>-&gt;<span class="ID">numKeys</span>, <span class="ID">b</span>-&gt;<span class="ID">keys</span>, <span class="ID">key</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_104"> 104</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_104"></span><span class="anchor" id="line-104"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_105"> 105</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_105"></span><span class="anchor" id="line-105"></span>    <span class="ResWord">if</span>(<span class="ID">pos</span> &lt; <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> &amp;&amp; <span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>] == <span class="ID">key</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_106"> 106</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_106"></span><span class="anchor" id="line-106"></span>        <span class="Comment">/* nothing to do */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_107"> 107</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_107"></span><span class="anchor" id="line-107"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_108"> 108</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_108"></span><span class="anchor" id="line-108"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_109"> 109</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_109"></span><span class="anchor" id="line-109"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_110"> 110</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_110"></span><span class="anchor" id="line-110"></span>    <span class="ResWord">if</span>(<span class="ID">b</span>-&gt;<span class="ID">isLeaf</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_111"> 111</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_111"></span><span class="anchor" id="line-111"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_112"> 112</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_112"></span><span class="anchor" id="line-112"></span>        <span class="Comment">/* everybody above pos moves up one space */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_113"> 113</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_113"></span><span class="anchor" id="line-113"></span>        <span class="ID">memmove</span>(&amp;<span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>+<span class="Number">1</span>], &amp;<span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>], <span class="ResWord">sizeof</span>(*(<span class="ID">b</span>-&gt;<span class="ID">keys</span>)) * (<span class="ID">b</span>-&gt;<span class="ID">numKeys</span> - <span class="ID">pos</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_114"> 114</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_114"></span><span class="anchor" id="line-114"></span>        <span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>] = <span class="ID">key</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_115"> 115</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_115"></span><span class="anchor" id="line-115"></span>        <span class="ID">b</span>-&gt;<span class="ID">numKeys</span>++;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_116"> 116</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_116"></span><span class="anchor" id="line-116"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_117"> 117</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_117"></span><span class="anchor" id="line-117"></span>    } <span class="ResWord">else</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_118"> 118</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_118"></span><span class="anchor" id="line-118"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_119"> 119</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_119"></span><span class="anchor" id="line-119"></span>        <span class="Comment">/* insert in child */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_120"> 120</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_120"></span><span class="anchor" id="line-120"></span>        <span class="ID">b2</span> = <span class="ID">btInsertInternal</span>(<span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">pos</span>], <span class="ID">key</span>, &amp;<span class="ID">mid</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_121"> 121</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_121"></span><span class="anchor" id="line-121"></span>        </span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_122"> 122</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_122"></span><span class="anchor" id="line-122"></span>        <span class="Comment">/* maybe insert a new key in b */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_123"> 123</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_123"></span><span class="anchor" id="line-123"></span>        <span class="ResWord">if</span>(<span class="ID">b2</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_124"> 124</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_124"></span><span class="anchor" id="line-124"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_125"> 125</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_125"></span><span class="anchor" id="line-125"></span>            <span class="Comment">/* every key above pos moves up one space */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_126"> 126</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_126"></span><span class="anchor" id="line-126"></span>            <span class="ID">memmove</span>(&amp;<span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>+<span class="Number">1</span>], &amp;<span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>], <span class="ResWord">sizeof</span>(*(<span class="ID">b</span>-&gt;<span class="ID">keys</span>)) * (<span class="ID">b</span>-&gt;<span class="ID">numKeys</span> - <span class="ID">pos</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_127"> 127</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_127"></span><span class="anchor" id="line-127"></span>            <span class="Comment">/* new kid goes in pos + 1*/</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_128"> 128</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_128"></span><span class="anchor" id="line-128"></span>            <span class="ID">memmove</span>(&amp;<span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">pos</span>+<span class="Number">2</span>], &amp;<span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">pos</span>+<span class="Number">1</span>], <span class="ResWord">sizeof</span>(*(<span class="ID">b</span>-&gt;<span class="ID">keys</span>)) * (<span class="ID">b</span>-&gt;<span class="ID">numKeys</span> - <span class="ID">pos</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_129"> 129</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_129"></span><span class="anchor" id="line-129"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_130"> 130</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_130"></span><span class="anchor" id="line-130"></span>            <span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">pos</span>] = <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_131"> 131</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_131"></span><span class="anchor" id="line-131"></span>            <span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">pos</span>+<span class="Number">1</span>] = <span class="ID">b2</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_132"> 132</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_132"></span><span class="anchor" id="line-132"></span>            <span class="ID">b</span>-&gt;<span class="ID">numKeys</span>++;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_133"> 133</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_133"></span><span class="anchor" id="line-133"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_134"> 134</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_134"></span><span class="anchor" id="line-134"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_135"> 135</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_135"></span><span class="anchor" id="line-135"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_136"> 136</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_136"></span><span class="anchor" id="line-136"></span>    <span class="Comment">/* we waste a tiny bit of space by splitting now</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_137"> 137</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_137"></span><span class="anchor" id="line-137"></span><span class="Comment">     * instead of on next insert */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_138"> 138</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_138"></span><span class="anchor" id="line-138"></span>    <span class="ResWord">if</span>(<span class="ID">b</span>-&gt;<span class="ID">numKeys</span> &gt;= <span class="ID">MAX_KEYS</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_139"> 139</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_139"></span><span class="anchor" id="line-139"></span>        <span class="ID">mid</span> = <span class="ID">b</span>-&gt;<span class="ID">numKeys</span>/<span class="Number">2</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_140"> 140</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_140"></span><span class="anchor" id="line-140"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_141"> 141</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_141"></span><span class="anchor" id="line-141"></span>        *<span class="ID">median</span> = <span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">mid</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_142"> 142</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_142"></span><span class="anchor" id="line-142"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_143"> 143</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_143"></span><span class="anchor" id="line-143"></span>        <span class="Comment">/* make a new node for keys &gt; median */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_144"> 144</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_144"></span><span class="anchor" id="line-144"></span>        <span class="Comment">/* picture is:</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_145"> 145</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_145"></span><span class="anchor" id="line-145"></span><span class="Comment">         *</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_146"> 146</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_146"></span><span class="anchor" id="line-146"></span><span class="Comment">         *      3 5 7</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_147"> 147</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_147"></span><span class="anchor" id="line-147"></span><span class="Comment">         *      A B C D</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_148"> 148</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_148"></span><span class="anchor" id="line-148"></span><span class="Comment">         *</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_149"> 149</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_149"></span><span class="anchor" id="line-149"></span><span class="Comment">         * becomes</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_150"> 150</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_150"></span><span class="anchor" id="line-150"></span><span class="Comment">         *          (5)</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_151"> 151</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_151"></span><span class="anchor" id="line-151"></span><span class="Comment">         *      3        7</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_152"> 152</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_152"></span><span class="anchor" id="line-152"></span><span class="Comment">         *      A B      C D</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_153"> 153</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_153"></span><span class="anchor" id="line-153"></span><span class="Comment">         */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_154"> 154</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_154"></span><span class="anchor" id="line-154"></span>        <span class="ID">b2</span> = <span class="ID">malloc</span>(<span class="ResWord">sizeof</span>(*<span class="ID">b2</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_155"> 155</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_155"></span><span class="anchor" id="line-155"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_156"> 156</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_156"></span><span class="anchor" id="line-156"></span>        <span class="ID">b2</span>-&gt;<span class="ID">numKeys</span> = <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> - <span class="ID">mid</span> - <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_157"> 157</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_157"></span><span class="anchor" id="line-157"></span>        <span class="ID">b2</span>-&gt;<span class="ID">isLeaf</span> = <span class="ID">b</span>-&gt;<span class="ID">isLeaf</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_158"> 158</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_158"></span><span class="anchor" id="line-158"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_159"> 159</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_159"></span><span class="anchor" id="line-159"></span>        <span class="ID">memmove</span>(<span class="ID">b2</span>-&gt;<span class="ID">keys</span>, &amp;<span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="ID">mid</span>+<span class="Number">1</span>], <span class="ResWord">sizeof</span>(*(<span class="ID">b</span>-&gt;<span class="ID">keys</span>)) * <span class="ID">b2</span>-&gt;<span class="ID">numKeys</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_160"> 160</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_160"></span><span class="anchor" id="line-160"></span>        <span class="ResWord">if</span>(!<span class="ID">b</span>-&gt;<span class="ID">isLeaf</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_161"> 161</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_161"></span><span class="anchor" id="line-161"></span>            <span class="ID">memmove</span>(<span class="ID">b2</span>-&gt;<span class="ID">kids</span>, &amp;<span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="ID">mid</span>+<span class="Number">1</span>], <span class="ResWord">sizeof</span>(*(<span class="ID">b</span>-&gt;<span class="ID">kids</span>)) * (<span class="ID">b2</span>-&gt;<span class="ID">numKeys</span> + <span class="Number">1</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_162"> 162</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_162"></span><span class="anchor" id="line-162"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_163"> 163</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_163"></span><span class="anchor" id="line-163"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_164"> 164</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_164"></span><span class="anchor" id="line-164"></span>        <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> = <span class="ID">mid</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_165"> 165</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_165"></span><span class="anchor" id="line-165"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_166"> 166</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_166"></span><span class="anchor" id="line-166"></span>        <span class="ResWord">return</span> <span class="ID">b2</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_167"> 167</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_167"></span><span class="anchor" id="line-167"></span>    } <span class="ResWord">else</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_168"> 168</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_168"></span><span class="anchor" id="line-168"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_169"> 169</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_169"></span><span class="anchor" id="line-169"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_170"> 170</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_170"></span><span class="anchor" id="line-170"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_171"> 171</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_171"></span><span class="anchor" id="line-171"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_172"> 172</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_172"></span><span class="anchor" id="line-172"></span><span class="ResWord">void</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_173"> 173</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_173"></span><span class="anchor" id="line-173"></span><span class="ID">btInsert</span>(<span class="ID">bTree</span> <span class="ID">b</span>, <span class="ResWord">int</span> <span class="ID">key</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_174"> 174</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_174"></span><span class="anchor" id="line-174"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_175"> 175</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_175"></span><span class="anchor" id="line-175"></span>    <span class="ID">bTree</span> <span class="ID">b1</span>;   <span class="Comment">/* new left child */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_176"> 176</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_176"></span><span class="anchor" id="line-176"></span>    <span class="ID">bTree</span> <span class="ID">b2</span>;   <span class="Comment">/* new right child */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_177"> 177</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_177"></span><span class="anchor" id="line-177"></span>    <span class="ResWord">int</span> <span class="ID">median</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_178"> 178</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_178"></span><span class="anchor" id="line-178"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_179"> 179</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_179"></span><span class="anchor" id="line-179"></span>    <span class="ID">b2</span> = <span class="ID">btInsertInternal</span>(<span class="ID">b</span>, <span class="ID">key</span>, &amp;<span class="ID">median</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_180"> 180</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_180"></span><span class="anchor" id="line-180"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_181"> 181</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_181"></span><span class="anchor" id="line-181"></span>    <span class="ResWord">if</span>(<span class="ID">b2</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_182"> 182</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_182"></span><span class="anchor" id="line-182"></span>        <span class="Comment">/* basic issue here is that we are at the root */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_183"> 183</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_183"></span><span class="anchor" id="line-183"></span>        <span class="Comment">/* so if we split, we have to make a new root */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_184"> 184</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_184"></span><span class="anchor" id="line-184"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_185"> 185</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_185"></span><span class="anchor" id="line-185"></span>        <span class="ID">b1</span> = <span class="ID">malloc</span>(<span class="ResWord">sizeof</span>(*<span class="ID">b1</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_186"> 186</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_186"></span><span class="anchor" id="line-186"></span>        <span class="ID">assert</span>(<span class="ID">b1</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_187"> 187</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_187"></span><span class="anchor" id="line-187"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_188"> 188</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_188"></span><span class="anchor" id="line-188"></span>        <span class="Comment">/* copy root to b1 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_189"> 189</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_189"></span><span class="anchor" id="line-189"></span>        <span class="ID">memmove</span>(<span class="ID">b1</span>, <span class="ID">b</span>, <span class="ResWord">sizeof</span>(*<span class="ID">b</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_190"> 190</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_190"></span><span class="anchor" id="line-190"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_191"> 191</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_191"></span><span class="anchor" id="line-191"></span>        <span class="Comment">/* make root point to b1 and b2 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_192"> 192</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_192"></span><span class="anchor" id="line-192"></span>        <span class="ID">b</span>-&gt;<span class="ID">numKeys</span> = <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_193"> 193</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_193"></span><span class="anchor" id="line-193"></span>        <span class="ID">b</span>-&gt;<span class="ID">isLeaf</span> = <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_194"> 194</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_194"></span><span class="anchor" id="line-194"></span>        <span class="ID">b</span>-&gt;<span class="ID">keys</span>[<span class="Number">0</span>] = <span class="ID">median</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_195"> 195</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_195"></span><span class="anchor" id="line-195"></span>        <span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="Number">0</span>] = <span class="ID">b1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_196"> 196</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_196"></span><span class="anchor" id="line-196"></span>        <span class="ID">b</span>-&gt;<span class="ID">kids</span>[<span class="Number">1</span>] = <span class="ID">b2</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_197"> 197</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_197"></span><span class="anchor" id="line-197"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_198"> 198</a> </span><span class="LineAnchor" id="CA-07a9698aa8110ca3a7f6edad4a96ea91950560ce_198"></span><span class="anchor" id="line-198"></span>}</span>
</pre></div></div><a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/bTree.c" title="attachment:bTree.c">bTree.c</a> <span class="anchor" id="line-58-1"></span><span class="anchor" id="line-59-1"></span><p class="line862">See also <a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/testBTree.c" title="">testBTree.c</a> and <a class="attachment" href="https://www.cs.yale.edu/homes/aspnes/pinewiki/attachments/BTrees/Makefile" title="">Makefile</a>. <span class="anchor" id="line-60-1"></span><span class="anchor" id="bottom"></span></p></div>
</div>
<hr>
2014-06-17 11:57


</body></html>